WITH col_header(product_id, totalsales) AS (SELECT product_id, SUM(orders.price) AS totalsales FROM products INNER JOIN orders on orders.product_id = products.id WHERE products.category_id = 11 GROUP BY product_id) SELECT products.id AS id, products.name AS name, col_header.totalsales AS totalsales FROM products INNER JOIN col_header ON products.id = col_header.product_id ORDER BY name LIMIT 10 OFFSET 10;

WITH row_header(id, name, totalsales) AS (SELECT users.id AS id, users.name AS name, SUM(orders.price) AS totalsales FROM users INNER JOIN orders ON users.id = orders.user_id GROUP BY users.id) SELECT DISTINCT LEFT(users.name, 10) AS name, users.id AS id, row_header.totalsales AS totalsales FROM users INNER JOIN row_header ON row_header.name = users.name ORDER BY totalsales DESC LIMIT 20 OFFSET 20;

WITH row_header(id, name, totalsales) AS (SELECT users.id AS id, users.name AS name, SUM(orders.price) AS totalsales FROM users INNER JOIN orders ON users.id = orders.user_id INNER JOIN products ON orders.product_id = products.id WHERE products.category_id = 14 GROUP BY users.id) SELECT DISTINCT LEFT(users.name, 10) AS name, users.id AS id, row_header.totalsales AS totalsales FROM users INNER JOIN row_header ON row_header.name = users.name ORDER BY name LIMIT 20 OFFSET 20;

WITH row_header(state, totalsales) AS (SELECT users.state AS state, SUM(orders.price) AS totalsales FROM users, orders WHERE users.id = orders.user_id GROUP BY users.state ORDER BY totalsales DESC) SELECT DISTINCT LEFT(users.state, 10) AS state, users.id AS id, row_header.totalsales AS totalsales FROM users INNER JOIN row_header ON row_header.state = users.state ORDER BY state LIMIT 20 OFFSET 40;

WITH row_header(state, totalsales) AS (SELECT users.state AS state, SUM(orders.price) AS totalsales FROM users INNER JOIN orders ON users.id = orders.user_id INNER JOIN products ON orders.product_id = products.id WHERE products.category_id = 11 GROUP BY users.state ORDER BY totalsales DESC) SELECT DISTINCT LEFT(users.state, 10) AS state, users.id AS id, row_header.totalsales AS totalsales FROM users INNER JOIN row_header ON row_header.state = users.state ORDER BY state LIMIT 20 OFFSET 20;